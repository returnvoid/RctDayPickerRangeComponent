// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`shallow-renders correctly 1`] = `
<div>
  <WithStyles(Button)
    onClick={[Function]}
  >
    <WithStyles(GridWrapper)
      alignItems="center"
      container={true}
      justify="space-between"
    >
      <WithStyles(GridWrapper)
        item={true}
      >
        <WithStyles(GridWrapper)
          alignItems="center"
          container={true}
        >
          <WithStyles(GridWrapper)
            item={true}
          >
            <WithStyles(Typography)>
              Dates
            </WithStyles(Typography)>
          </WithStyles(GridWrapper)>
        </WithStyles(GridWrapper)>
      </WithStyles(GridWrapper)>
      <WithStyles(GridWrapper)
        item={true}
      >
        <WithStyles(Icon)
          className="WithTheme-WithWidth-RctDayPickerRangeComponent---icon-1"
        >
          keyboard_arrow_down
        </WithStyles(Icon)>
      </WithStyles(GridWrapper)>
    </WithStyles(GridWrapper)>
  </WithStyles(Button)>
  <WithStyles(Popover)
    anchorEl={null}
    anchorOrigin={
      Object {
        "horizontal": "center",
        "vertical": "top",
      }
    }
    anchorPosition={
      Object {
        "left": 400,
        "top": 200,
      }
    }
    anchorReference="anchorEl"
    onClose={[Function]}
    open={false}
    transformOrigin={
      Object {
        "horizontal": "center",
        "vertical": "top",
      }
    }
  >
    <DayPickerRangeController
      daySize={39}
      enableOutsideDays={false}
      endDate={null}
      firstDayOfWeek={null}
      focusedInput="startDate"
      hideKeyboardShortcutsPanel={false}
      initialVisibleMonth={null}
      isDayBlocked={[Function]}
      isDayHighlighted={[Function]}
      isFocused={false}
      isOutsideRange={[Function]}
      isRTL={false}
      keepOpenOnDateSelect={false}
      minimumNights={1}
      monthFormat="MMMM YYYY"
      navNext={null}
      navPrev={null}
      noBorder={false}
      numberOfMonths={2}
      onBlur={[Function]}
      onClose={[Function]}
      onDatesChange={[Function]}
      onFocusChange={[Function]}
      onNextMonthClick={[Function]}
      onOutsideClick={[Function]}
      onPrevMonthClick={[Function]}
      orientation="horizontal"
      phrases={
        Object {
          "calendarLabel": "Calendar",
          "chooseAvailableDate": [Function],
          "chooseAvailableEndDate": [Function],
          "chooseAvailableStartDate": [Function],
          "dateIsSelected": [Function],
          "dateIsUnavailable": [Function],
          "enterKey": "Enter key",
          "escape": "Escape key",
          "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
          "homeEnd": "Home and end keys",
          "jumpToNextMonth": "Move forward to switch to the next month.",
          "jumpToPrevMonth": "Move backward to switch to the previous month.",
          "keyboardShortcuts": "Keyboard Shortcuts",
          "leftArrowRightArrow": "Right and left arrow keys",
          "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
          "moveFocusByOneMonth": "Switch months.",
          "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
          "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
          "openThisPanel": "Open this panel.",
          "pageUpPageDown": "page up and page down keys",
          "questionMark": "Question mark",
          "returnFocusToInput": "Return to the date input field.",
          "selectFocusedDate": "Select the date in focus.",
          "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
          "upArrowDownArrow": "up and down arrow keys",
        }
      }
      renderCalendarInfo={null}
      renderDayContents={null}
      renderMonth={null}
      showKeyboardShortcuts={false}
      startDate={null}
      verticalHeight={null}
      weekDayFormat="dd"
      withPortal={false}
    />
  </WithStyles(Popover)>
</div>
`;
